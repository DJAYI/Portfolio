---
interface Props {
  enterprise_name: string;
  latest?: boolean;
  date_released: string;
  desc_position: string;
  link_enterprise?: string;
  duration: string;
}

const {
  enterprise_name,
  latest,
  date_released,
  desc_position,
  link_enterprise,
  duration,
} = Astro.props;
---

<li class="mb-10 ms-6">
  <span
    class="absolute flex items-center justify-center w-6 h-6 rounded-full -start-[13px] ring-8  ring-gray-900 bg-blue-900"
  >
    <svg
      class="w-2.5 h-2.5  text-blue-300"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="currentColor"
      viewBox="0 0 20 20"
    >
      <path
        d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z"
      ></path>
    </svg>
  </span>
  <h3
    class="flex items-center mb-1 text-lg font-semibold text-white"
  >
    {enterprise_name}

    {
      latest && (
        <span class="text-sm font-medium me-2 px-2.5 py-0.5 rounded bg-blue-900 text-blue-300 ms-3">
          Latest
        </span>
      )
    }
  </h3>
  <time
    class="block mb-2 text-sm font-normal leading-none  text-gray-500"
    >Released on {date_released}</time
  >
  <p class="mb-4 text-base font-normal text-gray-400">
    {desc_position}
  </p>
  <span class="my-4 py-4 font-semibold block">Duration: {duration}</span>

  {
    link_enterprise?.length > 0 && (
      <a
        href={link_enterprise}
        class="inline-flex items-center px-4 py-2 text-sm font-medium  rounded-lg  focus:z-10 focus:ring-4 focus:outline-none focus:text-blue-700 bg-gray-800 text-gray-400 border-gray-600 hover:text-white hover:bg-gray-700 focus:ring-gray-700"
      >
        View enterprise
      </a>
    )
  }
  <br />
</li>
